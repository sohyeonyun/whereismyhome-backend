<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.home.model.mapper.MapMapper">

	<resultMap type="MapDongLocationDTO" id="donglocatedto">
		<result column="si_gugun_dong_name" property="siGugunDongName"/>
		<result column="dongcode" property="dongCode"/>
	</resultMap>
	
	<resultMap type="MapAptLocationDTO" id="aptlocatedto">
		<result column="apartmentName" property="apartmentName"/>
		<result column="location" property="location"/>
		<result column="aptcode" property="aptCode"/>
	</resultMap>
	
	<resultMap type="AvgDealamountDTO" id="avgdealamountDTO">
		<result column="dealYear" property="dealYear"/>
		<result column="avgdealamount" property="avgDealamount"/>
	</resultMap>
	
	<resultMap type="MapDTO" id="mapdto">
		<result column="apartmentname" property="apartMentName"/>
		<result column="location" property="location"/>
		<result column="buildyear" property="buildYear"/>
		<result column="dealamount" property="dealAmount"/>
		<result column="date" property="date"/>
		<result column="area" property="area"/>
		<result column="floor" property="floor"/>
		<result column="lat" property="lat"/>
		<result column="lng" property="lng"/>
		<result column="house_like_count" property="houseLikeCount"/>
	</resultMap>
	
	<!-- 맵 검색 -->
	<select id="listMapDongLocation" parameterType="String" resultMap="donglocatedto">
		select distinct concat(sidoName, " ", gugunName, " ", dongName) si_gugun_dong_name, dongcode
			from dongcode
		    where sidoName is not null
				and gugunName is not null
		        and dongName is not null
		        and (sidoName like concat('%', #{name}, '%')
						or gugunName like concat('%', #{name}, '%')
						or dongName like concat('%', #{name}, '%'))
	</select>
	
	<select id="listMapAptLocation" parameterType="String" resultMap="aptlocatedto">
		select distinct i.apartmentName, concat(c.sidoname, ' ', c.gugunname, ' ', c.dongname) location, i.aptcode
			from   houseinfo as i
				left join dongcode AS c
		              on i.dongcode = c.dongcode
			where  apartmentname like concat('%', #{name}, '%')
	</select>
	
	<select id="listMapDong" parameterType="map" resultMap="mapdto">
		SELECT DISTINCT i.apartmentname,
		                Concat(c.sidoname, ' ', c.gugunname, ' ', c.dongname) location,
		                i.buildyear,
		                d.dealamount,
		                Concat(d.dealyear, '.', d.dealmonth, '.', d.dealday)  date,
		                d.area,
		                d.floor,
		                i.lat,
		                i.lng,
		                (SELECT Count(*)
		                 FROM   house_like
		                 WHERE  aptcode = i.aptcode)
		                house_like_count,
		                c.dongcode,
		                i.aptcode
		FROM   houseinfo AS i
		       LEFT JOIN dongcode AS c
		              ON i.dongcode = c.dongcode
		       LEFT JOIN housedeal AS d
		              ON i.aptcode = d.aptcode
		       LEFT JOIN house_like AS hl
		              ON i.aptcode = hl.aptcode
		WHERE  c.dongcode = #{dongCode}
		       <if test="'lowDealAmount' != null">
		       AND (SELECT Cast(REPLACE(dealamount, ',', '') AS UNSIGNED)) >= #{lowDealAmount}
		       </if>
		       <if test="'highDealAmount' != null">
		       AND (SELECT Cast(REPLACE(dealamount, ',', '') AS UNSIGNED)) &lt;= #{highDealAmount}
		       </if>
		       <if test="'lowArea' != null">
		       AND (SELECT Cast(area AS UNSIGNED)) >= #{lowArea}
		       </if>
		       <if test="'highArea' != null">
		       AND (SELECT Cast(area AS UNSIGNED)) &lt;= #{highArea}
		       </if>
		       <if test="'year' != null">
		       AND d.dealyear >= Year(Now()) - #{year}
		       </if>
		       GROUP by i.apartmentname
		       LIMIT 10
	</select>
	
	<select id="listMapApt" parameterType="map" resultMap="mapdto">
		SELECT DISTINCT i.apartmentname,
		                Concat(c.sidoname, ' ', c.gugunname, ' ', c.dongname) location,
		                i.buildyear,
		                d.dealamount,
		                Concat(d.dealyear, '.', d.dealmonth, '.', d.dealday)  date,
		                d.area,
		                d.floor,
		                i.lat,
		                i.lng,
		                (SELECT Count(*)
		                 FROM   house_like
		                 WHERE  aptcode = i.aptcode)
		                house_like_count,
		                c.dongcode,
		                i.aptcode
		FROM   houseinfo AS i
		       LEFT JOIN dongcode AS c
		              ON i.dongcode = c.dongcode
		       LEFT JOIN housedeal AS d
		              ON i.aptcode = d.aptcode
		       LEFT JOIN house_like AS hl
		              ON i.aptcode = hl.aptcode
		WHERE  i.aptcode = #{aptCode}
		       <if test="'lowDealAmount' != null">
		       AND (SELECT Cast(REPLACE(dealamount, ',', '') AS UNSIGNED)) >= #{lowDealAmount}
		       </if>
		       <if test="'highDealAmount' != null">
		       AND (SELECT Cast(REPLACE(dealamount, ',', '') AS UNSIGNED)) &lt;= #{highDealAmount}
		       </if>
		       <if test="'lowArea' != null">
		       AND (SELECT Cast(area AS UNSIGNED)) >= #{lowArea}
		       </if>
		       <if test="'highArea' != null">
		       AND (SELECT Cast(area AS UNSIGNED)) &lt;= #{highArea}
		       </if>
		       <if test="'year' != null">
		       AND d.dealyear >= Year(Now()) - #{year}
		       </if>
		       LIMIT 10
	</select>
	
	<select id="listAvgDealamount" parameterType="String" resultMap="avgdealamountDTO">
		select dealYear, round(avg(REPLACE(dealamount, ',', '')), -3) avgdealamount
			from housedeal
		    where aptcode = #{aptCode}
		    group by dealYear;
	</select>
	
</mapper>